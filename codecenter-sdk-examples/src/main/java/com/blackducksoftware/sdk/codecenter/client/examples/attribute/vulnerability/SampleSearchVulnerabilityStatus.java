/*
 * Black Duck Software Suite SDK
 * Copyright (C) 2016 Black Duck Software, Inc.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 */
package com.blackducksoftware.sdk.codecenter.client.examples.attribute.vulnerability;

import java.util.Collection;
import java.util.List;

import org.kohsuke.args4j.Argument;

import com.blackducksoftware.sdk.codecenter.attribute.data.VulnerabilityStatus;
import com.blackducksoftware.sdk.codecenter.attribute.data.VulnerabilityStatusPageFilter;
import com.blackducksoftware.sdk.codecenter.client.examples.SampleSearch;
import com.blackducksoftware.sdk.codecenter.client.util.CodeCenterServerProxy;

public class SampleSearchVulnerabilityStatus extends SampleSearch<VulnerabilityStatus> {

    public static void main(String[] args) {
        new SampleSearchVulnerabilityStatus(args).run();
    }

    @Argument(index = 3, required = false, metaVar = "searchString", usage = "part of the vulnerability status name to search for; omit to retrieve all")
    protected String searchString;

    public SampleSearchVulnerabilityStatus(String[] args) {
        super(args);
    }

    @Override
    protected Collection<VulnerabilityStatus> search(CodeCenterServerProxy proxy) throws Exception {
        // Create the vulnerability status page filter
        VulnerabilityStatusPageFilter pageFilter = new VulnerabilityStatusPageFilter();
        pageFilter.setFirstRowIndex(0);
        pageFilter.setLastRowIndex(limit);

        // Search for vulnerability statuses
        List<VulnerabilityStatus> vulnStatuses = proxy.getAttributeApi().searchVulerabilityStatus(searchString != null ? searchString : "", pageFilter);
        return vulnStatuses;
    }

    @Override
    protected String getSearchExpression() {
        return "vulnerability statuses" + (searchString != null ? " matching \"" + searchString + "\"" : "");
    }

    @Override
    protected void print(VulnerabilityStatus vulnStatus, CodeCenterServerProxy proxy) throws Exception {
        // Print vulnerability status name
        System.out.println(vulnStatus.getName());
    }

}
